<Page
    x:Class="Template10Test.Views.ProductsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:viewModels="using:Template10Test.ViewModels"
      mc:Ignorable="d"
      x:Name="Page">

    <Page.DataContext>
        <viewModels:ProductsPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <RelativePanel x:Name="RelativePanel" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <!--                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <!--                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <!--                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader" RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True" Text="Products">

        </controls:PageHeader>

        <TextBlock x:Name="Info" RelativePanel.Below="pageHeader" Text="Rightclick/hold to add to fridge or remove" Margin="5"/>
        <GridView x:Name="Products" RelativePanel.Below="Info" IsItemClickEnabled="True"  ItemsSource="{Binding Products, UpdateSourceTrigger=PropertyChanged}"
                    ItemClick="{x:Bind ViewModel.ClickCommand}"
                    SelectedItem="{Binding SelectedProduct, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Margin="5">
            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <StackPanel RightTapped="UIElement_OnRightTapped" Width="100" Height="100">
                            <TextBlock x:Name="asdf" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="RightTapped">
                                    <Behaviors:OpenFlyoutAction />
                                </Core:EventTriggerBehavior>
                                <Core:EventTriggerBehavior EventName="Holding">
                                    <Behaviors:OpenFlyoutAction />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem x:Name="AddToFridgeButton" Text="Add to fridge"
                                                Command="{Binding ElementName=Page, Path=DataContext.AddSelectedProduct}" />
                                    <MenuFlyoutItem x:Name="DeleteButton" Text="Delete"
                                                Command="{Binding ElementName=Page, Path=DataContext.DeleteSelectedProduct}" />
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>
        </GridView>
        <StackPanel RelativePanel.Below="Products">
            <TextBlock Text="Product name"/>
            <TextBox Text="{Binding AddProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
            <TextBlock Text="Product amount"/>
            <TextBox Text="{Binding AddProductAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
            <Button Content="Add product" Margin="5" Click="{x:Bind ViewModel.AddProductButton}"/>
        </StackPanel>
    </RelativePanel>

</Page>
